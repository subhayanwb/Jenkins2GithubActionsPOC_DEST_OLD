name: POCJobs/Simple_Decl_no_EPF_5
on:
  workflow_dispatch:
env:
#   # This item has no matching transformer
#   DOCKER_IMAGE: '"my-app:${{ env.BUILD_NUMBER }}"'
jobs:
  Initialize:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: clean workspace
      shell: bash
      run: rm -rf ${{ github.workspace }}/*
    - name: echo message
      run: echo Building with Maven and Docker
  Maven_Build:
    name: Maven Build
    runs-on: ubuntu-latest
    needs: Initialize
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up JDK 1.11
      uses: actions/setup-java@v4.0.0
      with:
        distribution: zulu
        java-version: '1.11'
        settings-path: "${{ github.workspace }}"
    - name: echo message
      run: echo Running Maven build
#     # This item has no matching transformer
#     - mvn:
#         isLiteral: true
#         value: clean install
  Docker_Build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: Maven_Build
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
#     # 'script' was not transformed because there is no suitable equivalent in GitHub Actions
#     - name: script
#       arguments:
#       - key: scriptBlock
#         value:
#           isLiteral: true
#           value: |-
#             echo "Building Docker image: ${{ env.DOCKER_IMAGE }}"
#                                 docker.build("${{ env.DOCKER_IMAGE }}", ".") // '.' refers to current directory where Dockerfile resides
  Push_Docker_Image:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: Docker_Build
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
#     # 'script' was not transformed because there is no suitable equivalent in GitHub Actions
#     - name: script
#       arguments:
#       - key: scriptBlock
#         value:
#           isLiteral: true
#           value: |-
#             echo "Pushing Docker image to registry"
#                                 docker.withRegistry('https://my-docker-registry.com', 'docker-credentials-id') {
#                                     docker.image("${{ env.DOCKER_IMAGE }}").push()
#                                 }
  Post-Build:
    if: always()
    name: Post Build
    runs-on: ubuntu-latest
    needs:
    - Initialize
    - Maven_Build
    - Docker_Build
    - Push_Docker_Image
    steps:
    - name: snapshot post build workflow status
      run: |-
        echo "success=${{ contains(needs.*.result,'success') && !contains(needs.*.result,'cancelled') && !contains(needs.*.result,'failure') }}" >> $GITHUB_OUTPUT
        echo "failure=${{ contains(needs.*.result,'failure') && !contains(needs.*.result,'cancelled') }}" >> $GITHUB_OUTPUT
      id: post_build
    - name: echo message
      run: echo Build or Docker image creation failed.
      if: steps.post_build.outputs.failure == 'true'
    - name: echo message
      run: echo Build and Docker image creation completed successfully!
      if: steps.post_build.outputs.success == 'true'
    - name: echo message
      run: echo Cleaning up workspace
      if: always()
    - name: clean workspace
      shell: bash
      run: rm -rf ${{ github.workspace }}/*
      if: always()
